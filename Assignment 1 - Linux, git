1. Create a file, assign permissions (read, write, execute) to different user categories (owner, group, others), and practice changing permissions using chmod.
Answer:
        $ touch firstfile.txt
        $ ls -l firstfile.txt
        -rwxr-x-wx 1
        $ chmod 711 firstfile.txt
        $ ls -l firstfile.txt
        -rwx--x--x 1
        $ chmod u=rwx,g=rx,o=r firstfile.txt
        $ ls -l firstfile.txt
        -rwxr-xr-- 1
        $ chmod 777 firstfile.txt
        $ ls -l firstfile.txt
        -rwxrwxrwx 1 
        $ chmod go-wx firstfile.txt
        $ ls -l firstfile.txt
        -rwxr--r-- 1
        $ chmod g+x firstfile.txt
        $ ls -l firstfile.txt
        -rwxr-xr-- 1

2. Execute basic Linux commands (e.g., ls, cd, mkdir, rm, touch) to manipulate files and directories, with an emphasis on understanding their usage.
Answer: 
        $ mkdir dhruv
        $ mkdir db
        $ cd dhruv
        $ ls -l
        total 0
        $ cd ..
        $ cd db 
        $ cd ..
        $ ls -d */
        db/  dhruv/
        $ touch seconffile.txt
        $ ls
        firstfile.txt    secondfile.txt      file.txt
        $ echo "This is my second file created using linux terminal." >> secondfile.txt
        $ head secondfile.txt
        This is my second file created using linux terminal.
        $ rm secondfile.txt
        $ ls
        firstfile.txt    file.txt

3. Using the terminal, practice navigating through directories, listing file contents, and moving files to different locations.
Answer:
        $ mv firstfile.txt dhruv
        $ cd dhruv
        $ ls
        firstfile.txt
        $ cd dhruv
        $ touch firstfile.txt
        $ echo "This is my first linux terminal file." >> firstfile.txt
        $ echo "My name is Dhruv" >> firstfile.txt
        $ head firstfile.txt
        This is my first linux terminal file.
        My name is Dhruv
        $ head -n 1 firstfile.txt
        This is my first linux terminal file.
        $ mv firstfile.txt db
        $ cd dhruv
        $ ls
        db

4. Create a new user and group, set their permissions, and explore user management commands like useradd, usermod, and userdel.
Answer: 
        $ pwd
        /home
        $ ls
        root
        $ useradd dh
        $ ls 
        dh   root
        $ id dh
        uid=1002(dh) gid=1002(dh) groups=1002(dh)
        $ useradd -g DB -s /bin/bash -m -d /home/dhr dhr
        $ id dhr
        uid=1003(dhr) gid=1001(DB) groups=1001(DB)
        $ userdel -r dh
        $ ls
        dhr  root
        $ usermod -g dh dhr
        $ passwd dhr
        Changing password for user dhr.
        New password:              
        passwd: all authentication tokens updated successfully.

5. Practices more linux commands
Answer:
        $ cd dhruv
        $ pwd
        /home/cg/root/dhruv
        $ cd ..
        $ ls -d
        db/  dhruv/
        $ rmdir db
        $ ls -d */
        dhruv/
        $ touch firstfile.txt
        $ echo "This is my first linux terminal file." >> firstfile.txt
        $ echo "My name is Dhruv" >> firstfile.txt
        $ touch secondfile.txt
        $ echo "This is my second file created using linux terminal." >> secondfile.txt
        $ head firstfile.txt
        This is my first linux terminal file.
        My name is Dhruv
        $ head secondfile.txt
        This is my second file created using linux terminal.
        $ cp firstfile.txt secondfile.txt
        $ head secondfile.txt
        This is my first linux terminal file.
        My name is Dhruv
        $ sort firstfile.txt
        My name is Dhruv
        This is my first linux terminal file.
        $ df -h
        Filesystem      Size  Used Avail Use% Mounted on
        overlay         2.0T   13G  1.9T   1% /
        tmpfs            64M     0   64M   0% /dev
        shm              64M     0   64M   0% /dev/shm
        /dev/nvme1n1p3  2.0T   13G  1.9T   1% /usr/sbin/docker-init
        tmpfs           512M     0  512M   0% /run
        tmpfs           1.0G   28K  1.0G   1% /tmp
        tmpfs            16G   24M   16G   1% /home/cg/root
        tmpfs            63G     0   63G   0% /proc/acpi
        tmpfs            63G     0   63G   0% /proc/scsi
        tmpfs            63G     0   63G   0% /sys/firmware
        tmpfs            63G     0   63G   0% /sys/devices/virtual/powercap
        $ wc -w firstfile.txt
        11 firstfile.txt
        $ wc -l firstfile.txt
        2 firstfile.txt
        $ wc -m firstfile.txt
        55 firstfile.txt

6. Introduction to version control and Git basics, Git installation and configuration, Basic Git commands (init, add, commit, push, pull)
Answer:
        $ git --version
        git version 2.30.1.windows.1
        $ git init
        Initialized empty Git repository in C:/Users/Dhruv/Desktop/myrepo/.git/
        $ echo "This is my First git file."> file.txt
        $ git add file.txt
        warning: LF will be replaced by CRLF in file.txt.
        The file will have its original line endings in your working directory
        $ git commit -m "My first file"
        [master (root-commit) afafe8f] My first file
        1 file changed, 1 insertion(+)
        create mode 100644 file.txt
        $ git remote add origin https://github.com/dhruvbansal0505/myrepo.git
        $ git push -u origin master

7. Setup a remote repository in Local , Add a file and commit or save the changes and push to master branch
Answer:
        $ mkdir myrepo
        $ cd myrepo
        $ git init
        Initialized empty Git repository in C:/Users/Dhruv/Desktop/myrepo/.git/
        $ echo "This is my First git file."> file.txt
        $ git add file.txt
        warning: LF will be replaced by CRLF in file.txt.
        The file will have its original line endings in your working directory
        $ git commit -m "My first file"
        [master (root-commit) afafe8f] My first file
         1 file changed, 1 insertion(+)
         create mode 100644 file.txt
        $ git remote add origin https://github.com/dhruvbansal0505/myrepo.git
        $ git push -u origin master
        
        Enumerating objects: 3, done.
        Counting objects: 100% (3/3), done.
        Writing objects: 100% (3/3), 241 bytes | 120.00 KiB/s, done.
        Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
        To https://github.com/dhruvbansal0505/myrepo.git
         * [new branch]      master -> master
        Branch 'master' set up to track remote branch 'master' from 'origin'.
        https://github.com/dhruvbansal0505/myrepo.git (this is the repository link). 

8. Merge types, Create a new branch then commit and push the changes to new branch and merge it with the master branch using pull request.
Answer:
        $ git checkout -b new-branch
        Switched to a new branch 'new-branch'
        $ echo "New branch created." >>next.txt
        $ git add next.txt
        warning: LF will be replaced by CRLF in next.txt.
        The file will have its original line endings in your working directory
        $ git commit -m "new branch"
        [new-branch 75df7fa] new branch
         1 file changed, 1 insertion(+)
         create mode 100644 next.txt
        $ git push -u origin new-branch
        Enumerating objects: 4, done.
        Counting objects: 100% (4/4), done.
        Delta compression using up to 4 threads
        Compressing objects: 100% (2/2), done.
        Writing objects: 100% (3/3), 289 bytes | 144.00 KiB/s, done.
        Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
        remote:
        remote: Create a pull request for 'new-branch' on GitHub by visiting:
        remote:      https://github.com/dhruvbansal0505/myrepo/pull/new/new-branch
        remote:
        To https://github.com/dhruvbansal0505/myrepo.git
         * [new branch]      new-branch -> new-branch
        Branch 'new-branch' set up to track remote branch 'new-branch' from 'origin'.
        https://github.com/dhruvbansal0505/myrepo.git (this is the repository link). 

9. Undo the last commit or remove the last created file from remote repo using CLI
Answer:
        $ git reset --soft HEAD~1
        $ git rm --cached next.txt
        rm 'next.txt'
        git commit -m "Removed a file"
        git push origin main

10. Branching and merging in Git, Resolve a merge conflicts
Answer:
        $ echo "new file created" > new.txt
        $ git add new.txt
        warning: LF will be replaced by CRLF in new.txt.
        The file will have its original line endings in your working directory
        $ git commit -m "new branche change"
        [new-branch 6453563] new branche change
         1 file changed, 1 insertion(+)
         create mode 100644 new.txt
        $ git checkout master
        Switched to branch 'master'
        Your branch is up to date with 'origin/master'.
        $ echo "new file created" > new.txt  
        $ git add new.txt
        warning: LF will be replaced by CRLF in new.txt.
        The file will have its original line endings in your working directory
        $ git commit -m "new branche change"
        [master e6ed218] new branche change
         1 file changed, 1 insertion(+)
         create mode 100644 new.txt
        $ git merge new-branch
        hint: Waiting for your editor to close the file... code --wait: code: command not found
        error: There was a problem with the editor 'code --wait'.
        Not committing merge; use 'git commit' to complete the merge.
        $ git push origin master
        Enumerating objects: 4, done.
        Counting objects: 100% (4/4), done.
        Delta compression using up to 4 threads
        Compressing objects: 100% (2/2), done.
        Writing objects: 100% (3/3), 291 bytes | 145.00 KiB/s, done.
        Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
        To https://github.com/dhruvbansal0505/myrepo.git
           afafe8f..e6ed218  master -> master

11. Practice More git commands
Answer:
        $ mkdir gitpr
        $ cd gitpr
        $ git init
        Initialized empty Git repository in C:/Users/Dhruv/Desktop/myrepo/prac/.git/
        $ git reflog
        fatal: your current branch 'master' does not have any commits yet





